<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Project extends \App\Entity\Project implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'date', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'expert', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'confirmed', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'junior', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'application', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'projectFeatures', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'quotation'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'date', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'expert', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'confirmed', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'junior', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'application', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'projectFeatures', '' . "\0" . 'App\\Entity\\Project' . "\0" . 'quotation'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Project $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getTotalEmployee(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalEmployee', []);

        return parent::getTotalEmployee();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(?string $name): \App\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate(?\DateTimeInterface $date): \App\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(?string $description): \App\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpert(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpert', []);

        return parent::getExpert();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpert(?int $expert): \App\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpert', [$expert]);

        return parent::setExpert($expert);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmed(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmed', []);

        return parent::getConfirmed();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmed(?int $confirmed): \App\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmed', [$confirmed]);

        return parent::setConfirmed($confirmed);
    }

    /**
     * {@inheritDoc}
     */
    public function getJunior(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJunior', []);

        return parent::getJunior();
    }

    /**
     * {@inheritDoc}
     */
    public function setJunior(?int $junior): \App\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJunior', [$junior]);

        return parent::setJunior($junior);
    }

    /**
     * {@inheritDoc}
     */
    public function getApplication(): ?\App\Entity\Application
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApplication', []);

        return parent::getApplication();
    }

    /**
     * {@inheritDoc}
     */
    public function setApplication(?\App\Entity\Application $application): \App\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApplication', [$application]);

        return parent::setApplication($application);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectFeatures(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectFeatures', []);

        return parent::getProjectFeatures();
    }

    /**
     * {@inheritDoc}
     */
    public function addProjectFeature(\App\Entity\ProjectFeature $projectFeature): \App\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProjectFeature', [$projectFeature]);

        return parent::addProjectFeature($projectFeature);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProjectFeature(\App\Entity\ProjectFeature $projectFeature): \App\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProjectFeature', [$projectFeature]);

        return parent::removeProjectFeature($projectFeature);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuotation(): ?\App\Entity\Quotation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuotation', []);

        return parent::getQuotation();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuotation(?\App\Entity\Quotation $quotation): \App\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuotation', [$quotation]);

        return parent::setQuotation($quotation);
    }

}
