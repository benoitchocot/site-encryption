<?php //App%255CEntity%255CUser%2524password

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotNull'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotNull')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
    ],
    null,
    [
        'stdClass' => [
            'message' => [
                1 => 'Merci de saisir un mot de passe',
                'Merci de saisir un mot de passe',
                4 => 'Le mot de passe doit contenir au minimum 1 chiffre, 1 majuscule, et un caractère spécial.',
            ],
            'groups' => [
                1 => [
                    'Password',
                ],
                [
                    'Password',
                ],
                [
                    'Pasword',
                ],
                [
                    'Password',
                ],
            ],
            'minMessage' => [
                3 => 'Le mot de passe doit contenir minimum 8 caractères',
            ],
            'min' => [
                3 => '8',
            ],
            'pattern' => [
                4 => '/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[0-9])(?=.*?\\W).*$/',
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
        $o[3],
        $o[4],
    ],
    []
); }];
